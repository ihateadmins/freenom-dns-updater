<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMIOAADCDgAAAAAAAAAA
        AAAaEhH/GRAQ/xkQD/8aEQ//GxMQ/xwUEf8fFhP/IBkW/yQxPv8uMz//Oiso/zwtLf84Kyz/Nykq/zMn
        Jv8tISD/KB8f/yEcHv8cFhn/GhQX/xwXGv8eGRv/GBQV/xYREf8WEA//Fw8N/xsRD/8RDg7/BwYH/wYF
        Bf8ODQ3/DgwM/xUODv8WDg7/GBAP/xsTEf8fFxT/JRwZ/y4hH/8zLDH/JTd//yk7jv8+OE7/Pi4t/zgq
        K/8xJCT/Kh4c/yYbGf8lHBr/Ih4m/xwfL/8gHi//JSIx/yklKv8bFhn/FhER/xUQD/8XDw7/GxEP/xAN
        Dv8HBQb/BgYG/w4MDP8NCwz/GhIR/xsTE/8gFxb/KB0b/zAkIv81Jyf/OCss/zs0PP8wOqD/KjbR/zU5
        fP81JyL/LSAf/ysfHf8qHxz/Jh0a/yQbGf8lMF3/LUiJ/y40VP8fHED/Ihsl/xoUGP8WERH/FRAP/xcP
        Df8ZEQ//Dw0N/wcGBv8KCAj/DgsM/w0KDP8nGxr/KBwc/yoeHv8uIiD/NCgm/zcqKf85O23/OT1s/zQx
        PP8tPXv/LjBC/y0gHP8uIiD/LyMh/y8jIf8oIB3/Jh0b/yUnPf8nQXP/MzxT/zEuP/8xKS3/HhcY/xYR
        Ef8VEA//Fw8N/xkRDv8NDAv/CAcH/w8NDf8OCwz/DgoN/ykdHP8qHh3/LSAf/zAkIv8wJSL/MCor/yUy
        fP8iNHT/IjFe/zAvNf8xJCD/MSUi/zImJP80JyX/MSUj/yogHv8mHRz/IBse/yIjMf8vMDj/Pz1B/0E4
        OP8fGRr/FhER/xYPD/8XDw3/GREO/wwKCv8JBwj/EA0N/w4MDP8ODA3/JhsZ/yYaGP8mGhj/JxsZ/ykd
        G/8uJCH/MDE6/yo5XP8kN2z/NCwu/zYnJP80KCb/Mycl/zMnJf8wJCL/KiAc/yQfKv8jIzX/Hxw1/x8c
        Jf8iHin/LSUq/xwXGf8WEBH/Fw8P/xYPDf8aEQ//DAoK/woICf8QDQ7/DgwM/w4MDP8gFxT/IxkW/yQa
        F/8oHBr/LyIf/zIqK/8xO1//NjM6/zYzOf85Kif/OCoo/zQnJf8yJiT/MiYk/zAjIf8pICT/KThz/zVA
        Zv8jIED/Hxkk/x4cKf8uKjH/Ih0i/xYQEP8XDw//Fw8N/xoRD/8MCgr/CgkK/xIPD/8SDw//DgwM/yAX
        Fv8mGxj/KBwa/ywgHf80JyD/NTZO/zA9jf83LSz/OCgl/zkqJ/84KSb/MyUj/zEkIv8yJiT/MCQh/yoi
        K/8lPHH/Oklj/zo3QP8uKS//JCMy/ygmK/8mIib/FhER/xYPDv8WDg3/GREO/w8NDP8MCwz/ExAQ/xoV
        Fv8WERL/IhkY/ygcGv8rHhz/LiYo/zQ2RP83OUT/NzdF/zgpJf84KSb/Nygl/zYnJP80JSP/MSUj/zIm
        JP8wJCL/Kx8e/yYmOf8zOlL/RkdO/z46O/8zMj//JiUu/yopMf8bFhj/Fg8P/xYODf8ZEQ7/EA0M/wwL
        DP8UERL/HBYX/xsWF/8kGxj/KB0b/yseG/8sLj//KEOC/zBBY/81Okj/ODAy/zgpJf83KCX/Nick/zUn
        JP8zJiX/MiYl/zAkIv8rIB3/Jh0d/ycmN/8rKjb/Lyks/zQyNP8gISv/Jyc0/xwYH/8WDw//Fg4O/xkQ
        D/8QDQz/DQsM/xYTE/8cFxj/HBcY/yUcGf8oHhv/LCAc/ywyR/8iO3b/JT55/yo6av84MDH/OCkm/zco
        Jf82JyT/NSck/zMmJf8xJST/MCMh/ywhH/8pICD/MjE4/ywqMv8uLDf/JCIx/xsZK/8ZGCP/GBQg/xcQ
        Ev8WDQ3/GRAP/xANDP8OCwz/GhUW/x0XGP8bFhf/JBwZ/ycdGv8rHhz/MC44/zI4Uf8yOU//NjA2/zkp
        Jv84KSb/Nick/zYnJP81JyT/MyYk/zIkIv8xJCL/LSEf/yogIP8nJTD/KCUr/ywqM/8xM1D/Kyg0/xwZ
        JP8bFyP/GBIX/xYNDf8YDw//EA0M/w4MDP8aFRX/FxES/xEMDP8lGxj/KBwa/ysfG/8uOHv/MUCr/zQ9
        hP82LTL/Nicj/zcoJf82JyT/Nick/zUmI/80JSL/MyUi/zIlIv8tIiD/JR4j/xwcK/8lJCr/Kis9/zBB
        e/84OUj/IRso/yEhMP8ZFBn/Fg4N/xgPDv8PDAv/DwwN/xYSE/8PCwv/DwsK/ygbGf8qHRv/KyEe/zFB
        gP8yR57/Ljul/zYyR/82JiL/Nick/zYnJP83KCX/NSYj/zQlIv8zJSL/MiYh/zApKf8rJjH/Jyc0/yIh
        Kv8kJjT/OkFX/ztAW/8mJkr/HSBF/xYQEf8XDg7/Fw0N/w4LC/8ODAz/Ew8P/w4KCf8PCwr/JhoY/ygc
        Gv8rIB3/MjRA/zY3Uf83PFz/Ny4x/zYmI/82JyT/Nygl/zYnJP80JiP/MiYi/zMnI/8wJST/Jyc1/zU4
        V/8nKDn/GRcl/xUSHv8sKjn/OTpd/yQueP8YHkz/Fg8N/xgODv8WDQz/DgsK/wwKCv8KCAj/DQkJ/w8L
        Cv8lGhf/KBsZ/ysjI/8kNWP/LDxe/ys7Yv82LzH/NScj/zUoJP82KCX/Nick/zQmI/8yJyP/MyYj/zYv
        MP8vM1n/IzGU/yYpQf8bGiT/FhUf/yUgLv8+MkX/Lyc6/xgTH/8XDw7/GA4N/xUMDP8OCwr/CwoK/woJ
        CP8NCgr/EAsK/yUaF/8nGxn/KyIg/yMya/8mP5//JzeS/zQuM/8zJiP/NCcl/zUoJP81JyT/MyYk/zMm
        I/8yJSL/PzUz/0BFd/8eM6j/KjVg/yEfJ/8iIS//JyEu/zcsM/8gFxf/FhAP/xcPDv8XDQz/FQwK/w4K
        Cf8KCQn/CQgI/w0LC/8ODAv/JRoY/ygcGv8qHhv/Ly01/zM6Xf81O1v/Mysq/zMmI/80JyX/NCgl/zMm
        JP8yJST/MiUj/zIlIv8xIyD/LCZE/ykyhP8rMHD/KyVA/yMcLv8jITr/ICE8/xcRFf8WEBD/Fg4O/xUN
        C/8VDQ3/DQsS/wgHCP8ICAj/DgwM/w4MDP8oGxn/KRwa/yogHf8tMnH/LDqi/zNFh/80LjH/MiUi/zIl
        I/8zJiT/MSUk/zIlI/8xJCL/MSQi/zAkIf8uJCL/Lio+/zc8YP8wL0r/ICdX/yMvfv8cI1f/FhAU/xYP
        D/8VDg3/GBET/xsiT/8ZJ2r/CQoT/wgIB/8NCwv/DQsL/ykcGf8tHhz/MCMg/yYxZv8eMon/K0Ry/zMx
        Nv8xJCH/MSQi/zImJP8yJiL/LSQn/ygqYP8sKUD/MCUi/y4mJv8xO3D/MUmU/ygwSv8qP2v/KTlu/ycq
        X/8XERX/FA4O/x0YIP8lJkn/JDKP/x8sef8NDRb/CQgH/wwKCv8NCwv/JRsY/yodG/8tIB3/MC01/zI3
        Sf82OUb/Nioo/zIlIv8xJCL/NCYj/zEmJf8mIjP/ICh1/yQtfv8pJz//LScs/zdJfv8iPIP/Hi1P/yAs
        Sv8eKEr/HSJN/xcVI/8VExb/JytR/ysyXf8vNWz/LSlY/w4MEf8JBwf/DAoK/wwKCv8nGxn/KR0b/y0f
        Hf8yIx3/MDVl/zJAev83MDP/MyYj/zQmI/81JiP/LyYs/yYkRv8uK1v/LSto/yEeMP8fHSj/Kjt9/xsj
        SP8ZFR3/FxQb/xYTG/8XFST/GRkt/x4bHf8qMlb/MThl/y8sT/8fGzH/CggJ/wkHB/8LCQn/DAoK/yYa
        GP8pHRv/LSAc/zMpJ/8vOof/LTuh/zU/a/8yJyP/NCUi/zUmI/8tJjT/IyJL/y8oS/8yLFH/Ix8p/yEe
        JP8hJkb/HBsp/xoWJP8dGB3/IRsi/x4ZJP8fHCv/KSIl/yknNP83OF7/NCsz/xMRFf8KCQn/CAYH/woI
        CP8LCgr/JhsY/yoeG/8uIB3/Mikq/zI6W/81NUb/NDlP/zMuNf81JiL/Nycj/zEmLv8iHkT/LCQ0/zQx
        Uf8jHi3/KCMi/yciK/8iIUP/IRw2/zkxNP8+Njj/Ligx/yEbK/8tJi7/JyEs/yQhLv8XFhz/ERIW/xMT
        FP8LCQr/CgcH/wsJCv8jGhf/JxwZ/ywfHf8vIx7/LzRB/yo5Xf8iN3j/LDRU/zYoI/82JyP/Nick/zAk
        KP82LzP/OTlJ/yIfLv8nKTb/LjBJ/ywsVf8pJD3/NzI3/zs9Rf8sKT3/LytL/zc1Vf8qJzX/JiQq/xUW
        G/8TFRj/GBka/xMTE/8JCAj/CgkK/yIZFv8lHBn/Kh4c/y8jHv8uMkL/HTF1/yY9gP8xOFL/Nikl/y8i
        If8rICH/MyQg/zEqKv85OE//IyBH/y8wO/8vMT7/Rktc/zgzQP86Qkz/NF12/zFEYP8uKj//NDA6/zgy
        Nv8lISr/FBYa/xcaHP8WGRr/GBka/w8PD/8JCAr/IhkW/yUbGf8rHx3/LyMf/zMpJv8zMz7/NTI1/zU6
        W/8uM2D/KC1J/ygyVP8iHyX/JB8g/yYiLf8hIFX/LClM/z48Sf+RlKn/Sk9b/y1gc/8ueJ3/O4ii/zRG
        TP8wKir/KCIr/xkZJv8TFhr/FBca/wsNDv8SEhT/GRga/w0NDv8iGRb/Jhwa/ywfHf8wJCD/MiUf/zUx
        PP80PX3/MT2e/yk4nP8tOGH/R12Z/zI/af8gIjr/JSIr/yEeKf8dFSD/Ihwp/yYkcf88YpT/PLjN/xaJ
        q/8dn8f/M4yi/zEzOP8fHCX/JCtA/xIUGf8VFxv/DhAR/wgJCv8XGBn/GRkb/yMaF/8nHRv/Kx8d/y8j
        H/8yJB//NS0y/zE5pf80Omr/NTI7/zElJf8vJS3/LCw9/yUjN/8gHCP/GhQT/xoSEP8ZEw//DwxY/2hv
        1f+N0uf/KpXG/z2t2/87iqf/HzQ9/xsXGf8VFh7/EhIT/xQWGv8WGh3/Cg0P/wwOD/8cHSD/IxsX/ycd
        G/8rHx3/LiIe/zMlIP81JyP/NTRA/zMuM/8vN07/MCwy/yweGv8cFBL/FhAQ/xkTE/8aExH/GBEQ/xYQ
        Df8IBnn/ODfq/9PS+f/R4/L/sNr0/3uaq/8YNkL/Dw4O/wwMDP8ODQ7/EhIT/xUZHv8TGBz/CAsO/xAS
        FP8kGxj/KR4b/ywgHf8vIx7/MyUg/zUmIv80JSD/MyUg/ys0UP8lNlz/JB0b/xQODf8XEA//GhIQ/xgR
        EP8WEA//FhAN/wsIgf8BAPH/Mi70/3p3//+Cgt//Nz9O/xMbHv8UEhP/ERES/xEQEf8SERL/ERUY/xYe
        JP8PFRn/CAsM/yUaGP8qHhv/LiId/zElH/80JiD/NSch/zQmIP8yJB//MCgn/ygvPv8ZFRT/FA4N/xkR
        Ef8WEBD/FhEQ/xQPDv8bExD/IRox/xAOk/8BAOX/AwHq/wwLeP8XFBj/FxQU/xQTE/8TERP/EhET/xER
        E/8QEhP/FBkf/xceJf8LDxT/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>